@using Microsoft.EntityFrameworkCore;
@model IEnumerable<Cake.Models.Order>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Index";
}

<section class="banner_area">
    <div class="container">
        <div class="banner_text">
            <h3>Orders List</h3>
            <ul>
                <li><a href="/Home/Index">Home</a></li>
            </ul>
        </div>
    </div>
</section>
<section class="contact_form_area p_100">
    <div class="container">
        <div class="main_title">
            <h2>Orders List</h2>
        </div>
        <div class="row">
            <table class="table" style="width: 80%">
                <thead>
                    <tr>
                        <th>Order Id</th>
                        <th>
                            @Html.DisplayNameFor(model => model.Customer)
                        </th>
                        <th>
                            Order Date
                        </th>
                        <th>Price</th>
                        <th>
                            Status
                        </th>
                        
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.OrderId</td>
                            <td>
                                <a asp-controller="Users" asp-action="Details" asp-route-id="@item.CustomerId" asp-route-mod="view">@item.Customer.Name</a>
                            </td>
                            <td>
                                @item.OrderDate.ToString("dd/MM/yyyy")
                            </td>
                            <td>
                                @{
                                    BakeryCakeContext _context = new() ;
                                    List<OrderItem> oi = _context.OrderItems.Include(x => x.Product).Where(x => x.OrderId == item.OrderId).ToList();
                                    decimal price = 0;
                                    foreach (var i in oi)
                                    {
                                        price += i.Product.UnitPrice * i.Quantity;
                                    }
                                    price += 5;
                                    @string.Format("{0:0.00}",price)

                                    <span>$</span>
                                }
                            </td>
                            <td>
                                  <span class="product_task_inner">
                                    <form id="@item.OrderId.ToString()" method="post" asp-action="Edit" asp-controller="Orders">
                                        <input name="id" value="@item.OrderId" type="text" hidden/>
                                        @{
                                            if (item.Status.Equals("Processing"))
                                            {
                                                <select name="status" class="short" onchange="changeStatus(@item.OrderId.ToString())">
                                                    <option value="Processing" data-display="Processing">Processing</option>
                                                    <option value="Confirmed">Confirmed</option>
                                                    <option value="Reject">Reject</option>
                                                    <option value="Done">Done</option>
                                                </select>
                                            }
                                            if (item.Status.Equals("Confirmed"))
                                            {
                                                <select name="status" class="short" onchange="changeStatus(@item.OrderId)">
                                                    <option value="Confirmed" data-display="Confirmed">Confirmed</option>
                                                    <option value="Done">Done</option>
                                                </select>
                                            }
                                            if (item.Status.Equals("Reject"))
                                            {
                                                <select class="short" disabled>
                                                    <option value="Reject" data-display="Reject">Reject</option>
                                                </select>
                                            }
                                            if (item.Status.Equals("Done"))
                                            {
                                                <select class="short" disabled>
                                                    <option value="Done" data-display="Done">Done</option>
                                                </select>
                                            }
                                        }
                                      </form>
                                  </span>
                                
                            </td>
                            <td>
                                @*<a asp-action="Edit" asp-route-id="@item.OrderId">Edit</a> |*@
                                <a asp-action="Details" asp-route-id="@item.OrderId"><i class="fa fa-pencil"></i></a>
                                @*<a asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

<script>
    function changeStatus(id){
        document.getElementById(id).submit();
    }
</script>
